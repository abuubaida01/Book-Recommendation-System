import numpy as np
import pandas as pd 
import pickle
from flask import Flask, render_template, request
#request for getting dat from Form

top_50 = pickle.load(open('top_50.pkl', 'rb'))  # I have loaded DataFrame
pt = pickle.load(open('pivot_table.pkl', 'rb'))  # I have loaded DataFrame
cs = pickle.load(open('similarity_score.pkl', 'rb'))  # I have loaded DataFrame
book = pickle.load(open('book.pkl', 'rb'))  # I have loaded DataFrame

app = Flask(__name__)  # important


@app.route('/')  # for pointing homepage
def index():
    # now here I will send each columns of DF as a list to the index.html
    return render_template('index.html',
                    # .values for getting np array, into list
                    book_name=list(top_50['Book-Title'].values),
                    author_name=list(top_50['Book-Author'].values),
                    image=list(top_50['Image-URL-M'].values),
                    votes=list(top_50['no-of-rating'].values),
                    rates=list(top_50['avg-of-rating'].values)
    )

@app.route('/recommend')
def recommend_ui():
    return render_template('recommend.html')

@app.route('/recommend_books', methods =['post']) ## for recommending books method is post, cause we are getting data from user Forms

def recommend():
    input_data = request.form.get('user_input').strip()  ## got title from user
    # now I will show result

    index = np.where(pt.index == input_data)[0][0]
    if  index >=0 :
        similar_item=sorted(list(enumerate(cs[index])), key=lambda x: x[1], reverse=True)[1:9] 
    
        data= []
        book['Book-Title'] = book['Book-Title'].drop_duplicates() # removing duplicates

        for i in similar_item: 
            # print(i) # we got index, need index[i[0]]
            ## now I will match this title with each title of Books and will fetch book author name and Image
            # print(pt.index[i[0]])
            item= []
            # here book must bee chosen by top-50 books so that he/she can see recommendation

            item.extend(list(book[book['Book-Title']==pt.index[i[0]]]['Book-Title'].values))
            item.extend(list(book[book['Book-Title']==pt.index[i[0]]]['Book-Author'].values))
            item.extend(list(book[book['Book-Title']==pt.index[i[0]]]['Image-URL-M'].values))
            data.append(item)  ## we will get the list of list 
        # print(data)
        
        return render_template('recommend.html', data = data) #passing to recommend.html
    else: 
        return "Book is out of stock"

if __name__ == "__main__":
    app.run(debug=True)
